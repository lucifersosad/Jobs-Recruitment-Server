import { decode } from 'html-entities';
import sanitizeHtml from 'sanitize-html';
import { EducationalLevelLabelMapping, LevelEnum, LevelLabelMapping, WorkExperienceLabelMapping } from '../config/constant';
import { timeDuration } from './timeHelper';

const clean = (dirty) => {
  return sanitizeHtml(dirty, {
    allowedTags: [],
    allowedAttributes: {},
  });
}

const getLevelLabel = (value) => {
  return LevelLabelMapping[value] || '';
};

const getWorkExperienceLabel = (value) => {
  return WorkExperienceLabelMapping[value] || '';
};

const getEducationalLevelLabel = (value) => {
  return EducationalLevelLabelMapping[value] || '';
};

export const promptJob = (job) => {

  try {
    const formatTitle = clean(job.title)
    const formatdescription= clean(job.description)
    const formatdetailWorkExperience = clean(job.detailWorkExperience)
    const formatLevel = getLevelLabel(job.level);
    const formatWorkExperience = getWorkExperienceLabel(job.workExperience);
    const formatEducationalLevel = getEducationalLevelLabel(job.educationalLevel);
    const formatSkills = job?.skills?.length > 0 ? job.skills.join(", ") : ""

    const lines = [];

    formatTitle && lines.push(`\nCh·ª©c danh tuy·ªÉn d·ª•ng: ${formatTitle}`)
    formatdescription && lines.push(`\nM√¥ t·∫£ chi ti·∫øt:\n ${formatdescription}`)
    formatdetailWorkExperience && lines.push(`\nY√™u c·∫ßu c√¥ng vi·ªác:\n ${formatdetailWorkExperience}`)
    formatLevel && lines.push(`\nC·∫•p b·∫≠c: ${formatLevel}`)
    formatWorkExperience && lines.push(`\nS·ªë nƒÉm kinh nghi·ªám: ${formatWorkExperience}`)
    // formatEducationalLevel && lines.push(`\nTr√¨nh ƒë·ªô h·ªçc v·∫•n t·ªëi thi·ªÉu: ${formatEducationalLevel}`)
    formatSkills && lines.push(`\nK·ªπ nƒÉng: ${formatSkills}`)

    return lines.join("\n")
  } catch (error) {
    console.log("üöÄ ~ promtJob ~ error:", error)
    return;
  }
}

export const promptJobEmbedding = (job) => {

  const { job_categorie_id, workExperience, level, gender, city, skills } = job

  const formatJobCategorie = job_categorie_id?.length > 1 ? job_categorie_id[1]?.title : ""
  const formatWorkExperience = getWorkExperienceLabel(workExperience);
  const formatLevel = getLevelLabel(level);
  const formatGender = gender === "boy" ? "Nam" : "N·ªØ"
  const formatCity = city?.name ? city.name : ""
  const formatSkills = skills?.length > 0 ? skills.join(", ") : ""

  const lines = [];
  
  lines.push("Tuy·ªÉn d·ª•ng v·ªã tr√≠ vi·ªác l√†m")
  formatJobCategorie && lines.push(`\nNg√†nh ngh·ªÅ: ${formatJobCategorie}`)
  formatWorkExperience && lines.push(`\nS·ªë nƒÉm kinh nghi·ªám: ${formatWorkExperience}`)
  formatLevel && lines.push(`\nC·∫•p b·∫≠c: ${formatLevel}`)
  formatGender && lines.push(`\nGi·ªõi t√≠nh: ${formatGender}`)
  formatCity && lines.push(`\nƒê·ªãa ƒëi·ªÉm: ${formatCity}`)
  formatSkills && lines.push(`\nK·ªπ nƒÉng: ${formatSkills}`)

  return lines.join("");
};

export const promptUser = (user) => {

  const { fullName, job_categorie_id, jobTitle, yoe, skills, experiences, educations, address, gender } = user

  const formatGender = gender === 2 ? "Nam" : "N·ªØ"
  const formatJobCategorie =  job_categorie_id?.title ? job_categorie_id.title : ""
  const formatSkills = skills?.length > 0 ? skills.map(item => item?.title).join(", ") : ""
  const formatYOE = yoe > 0 ? `${yoe} nƒÉm` : ""
  const formatEducations = educations?.length > 0 ? educations.map(item => `Chuy√™n ng√†nh ${item.title} t·∫°i ${item.school_name}`).join("; ") : ""
  const formatExperiences = experiences?.length > 0 
    ? experiences
      .map(item => `${item?.position_name} t·∫°i ${item?.company_name} ${timeDuration(item?.start_month, item?.start_year, item?.end_month, item?.end_year)}`)
      .join("; ") 
    : ""
  const formatAddress = address?.city && address?.city.split("/")[1] ? address?.city.split("/")[1] : ""

  const lines = [];

  lines.push(`\nH·ªç t√™n ·ª©ng vi√™n xin vi·ªác: ${fullName}`)

  formatGender && lines.push(`\nGi·ªõi t√≠nh: ${formatGender}`)
  formatJobCategorie && lines.push(`\nNg√†nh ngh·ªÅ hi·ªán t·∫°i: ${formatJobCategorie}`)
  formatYOE && lines.push(`\nS·ªë nƒÉm kinh nghi·ªám: ${formatYOE}`)
  jobTitle && lines.push(`\nV·ªã tr√≠ hi·ªán t·∫°i: ${jobTitle}`)
  formatExperiences && lines.push(`\nKinh nghi·ªám: ${formatExperiences}`)
  formatSkills && lines.push(`\nK·ªπ nƒÉng: ${formatSkills}`)
  formatEducations && lines.push(`\nH·ªçc v·∫•n: ${formatEducations}`)
  formatAddress && lines.push(`\nƒê·ªãa ƒëi·ªÉm l√†m vi·ªác: ${formatAddress}`)
  return lines.join('');
};

export const promptJobEmbeddingV2 = (job) => {
  const { title, description, detailWorkExperience, skills, job_categorie_id } = job

  const formatJobCategorie = job_categorie_id?.length > 1 ? job_categorie_id[1]?.title : ""
  const formatdescription= clean(description)
  const formatdetailWorkExperience = clean(detailWorkExperience)
  const formatSkills = skills?.length > 0 ? skills.join(", ") : ""

  const lines = []

  title && lines.push(`\nCh√∫ng t√¥i ƒëang tuy·ªÉn d·ª•ng v·ªã tr√≠: ${title}`)
  formatJobCategorie && lines.push(`Ng√†nh ngh·ªÅ: ${formatJobCategorie}`)
  formatdescription && lines.push(`M√¥ t·∫£: ${formatdescription}`)
  formatdetailWorkExperience && lines.push(`Y√™u c·∫ßu c√¥ng vi·ªác: ${formatdetailWorkExperience}`)
  formatSkills && lines.push(`Kƒ© nƒÉng: ${formatSkills}`)

  return lines.join("\n")
};

export const promptUserEmbeddingV2 = (user) => {
  const {
    job_categorie_id,
    jobTitle,
    skills,
    experiences,
    educations,
  } = user;

  const formatJobCategorie = job_categorie_id?.title || "";
  const formatSkills = skills?.length > 0 ? skills.map(item => item?.title).join(", ") : "";
  const formatExperiences = experiences?.length > 0
    ? experiences.map(item =>
        `${item?.position_name} t·∫°i ${item?.company_name}`
      ).join("; ")
    : ""
  const formatEducations = educations?.length > 0
    ? educations.map(item => `chuy√™n ng√†nh ${item.title} t·∫°i ${item.school_name}`).join("; ")
    : "";

  const parts = [];

  jobTitle && parts.push(`·ª®ng vi√™n c√≥ ch·ª©c danh: ${jobTitle}`)
  formatJobCategorie && parts.push(`Ng√†nh ngh·ªÅ: ${formatJobCategorie}`)
  formatExperiences && parts.push(`Kinh nghi·ªám l√†m vi·ªác: ${formatExperiences}`);
  formatEducations && parts.push(`H·ªçc v·∫•n: ${formatEducations}`);
  formatSkills && parts.push(`K·ªπ nƒÉng chuy√™n m√¥n: ${formatSkills}`);

  return parts.join("\n");
};

export const promptCvBuild = (jobTitle) => {
  return `
    H√£y t·∫°o m·ªôt CV m·∫´u ph√π h·ª£p cho ch·ª©c danh c√¥ng vi·ªác "${jobTitle}".
    Bao g·ªìm c√°c m·ª•c: m·ª•c ti√™u ngh·ªÅ nghi·ªáp, k·ªπ nƒÉng n·ªïi b·∫≠t, h·ªçc v·∫•n v√† kinh nghi·ªám l√†m vi·ªác (gi·∫£ ƒë·ªãnh n·∫øu c·∫ßn).
    Tr·∫£ v·ªÅ k·∫øt qu·∫£ d∆∞·ªõi d·∫°ng JSON v·ªõi c·∫•u tr√∫c sau:

    {
      "objective": "string",
      "skills": ["string"],
      "educations": [
        {
          "title": "string",
          "school_name": "string",
          "start_date": "MM/YYYY",
          "end_date": "MM/YYYY",
          "description": "string"
        }
      ],
      "experiences": [
        {
          "position_name": "string",
          "company_name": "string",
          "start_date": "MM/YYYY",
          "end_date": "MM/YYYY",
          "description": "string"
        }
      ]
    }
  `;
};



